plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'groovy'
}

bootJar.enabled = false
jar.enabled = false

repositories {
    mavenCentral()
}

subprojects {subproject ->
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'groovy'

    group = 'my.study.buckpal'
    version = '0.0.1-SNAPSHOT'
    bootJar.enabled = false

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    dependencies {

        implementation 'com.google.guava:guava:31.1-jre'
        implementation 'org.apache.commons:commons-lang3:3.12.0'
        implementation 'org.apache.commons:commons-collections4:4.4'
        implementation 'org.modelmapper:modelmapper:3.1.0'

        testImplementation group: 'junit', name: 'junit', version: '4.12'

        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.hamcrest:hamcrest:2.2'
        testImplementation 'org.assertj:assertj-core:3.22.0'

        testImplementation 'org.spockframework:spock-spring:2.1-groovy-2.5'
        testImplementation 'org.codehaus.groovy:groovy:2.5.0'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    // https://www.baeldung.com/gradle-source-sets
    sourceSets {
        integrationTest {
            java {
                compileClasspath += sourceSets.main.output
                runtimeClasspath += sourceSets.main.output
                srcDirs('src/integrationTest/java')
            }
            groovy {
                compileClasspath += sourceSets.main.output
                runtimeClasspath += sourceSets.main.output
                srcDirs('src/integrationTest/groovy')
            }
            resources.srcDir file('src/integrationTest/resources')
        }
    }
    configurations {
        integrationTestImplementation.extendsFrom(testImplementation)
        integrationTestRuntimeOnly.extendsFrom(testRuntimeOnly)
    }
    // end of integrationtest

    tasks.named('test') {
        useJUnitPlatform()
    }

}
